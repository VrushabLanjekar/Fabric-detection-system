import numpy as np
import cv2
import streamlit as st
import os

# Specify the full path to your SVG file
bg_path = r"C:\Users\Shubham\Downloads\Fabric-Defect-Detection-using-OpenCV-and-Streamlit-master\bg.svg"  # raw string format to handle backslashes

# Add custom CSS to set the background image
st.markdown(
    f"""
    <style>
    .stApp {{
        background-image: url('file:///{bg_path}');
        background-size: cover;
        background-position: center;
    }}
    </style>
    """,
    unsafe_allow_html=True,
)

# Creating title for Streamlit app
st.title("Fabric Defect Detection with OpenCV")

# Uploading file for processing
uploaded_file = st.file_uploader("Choose an image", type=["jpg", "jpeg", "png"])
if uploaded_file is not None:
    # Read the uploaded image using OpenCV
    image = cv2.imdecode(np.frombuffer(uploaded_file.read(), np.uint8), 1)

    img = image.copy()
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    blur = cv2.blur(gray, (10, 10))

    dst = cv2.fastNlMeansDenoising(blur, None, 10, 7, 21)

    _, binary = cv2.threshold(dst, 127, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)

    kernel = np.ones((5, 5), np.uint8)

    erosion = cv2.erode(binary, kernel, iterations=1)
    dilation = cv2.dilate(binary, kernel, iterations=1)

    if (dilation == 0).sum() > 1:
        contours, _ = cv2.findContours(dilation, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)
        for i in contours:
            if cv2.contourArea(i) < 261121.0:
                cv2.drawContours(img, i, -1, (0, 0, 255), 3)
            cv2.putText(img, "defective fabric", (30, 40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)
    else:
        cv2.putText(img, "Good fabric", (30, 40), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)

    st.image(image, caption="Original Image", channels="BGR")
    st.image(blur, caption="Blur")
    st.image(binary, caption="Binary")
    st.image(erosion, caption="Erosion")
    st.image(dilation, caption="Dilation")
    st.image(img, caption="Defected Area", channels="BGR")

cv2.waitKey(0)
cv2.destroyAllWindows()